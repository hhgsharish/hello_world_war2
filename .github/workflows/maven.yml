name: Java CI with Maven, SonarQube, and Production Deployment

on:
  push:
    branches:
      - master
      - 'feature/*'
  pull_request:
    branches:
      - master
      - 'feature/*'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Trigger deploy to production'
        required: true
        default: 'false'

jobs:
  # Parallel Job: Build and Test on Self-Hosted EC2 (with Tomcat installed )
  build_and_test:
    # This job will run  on a self-hosted runner with the "staging" label.
    # Ensure your self-hosted runner for staging has the label `staging` assigned to it.
    runs-on: [self-hosted, staging]  # Self-hosted EC2 with Tomcat installed (Staging)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Environment Setup Script (env-setup.sh)
        run: |
          chmod +x ./env-setup.sh
          ./env-setup.sh  # This sets up Java, Maven, etc.

      - name: Build with Maven
        run: mvn clean install
        if: ${{ github.event_name != 'pull_request' }}  # Only run on push events, skip for PR

      - name: Run Unit Tests with Maven
        run: mvn test
        if: ${{ success() }}  # Run this step only if the previous build step succeeded
